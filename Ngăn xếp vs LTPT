Bài 29(lthdtbai29.cpp): Nhập vào một số nguyên dương, đưa ra số hex tương ứng.
Y/c trong chương trình có sử dụng ngăn xếp để chuyển từ số thập phân sang hex.
Ngăn xếp sử dụng cấu trúc lưu trữ phân tán với phần tử là ký tự.
*/
#include<iostream>
#include<stdio.h>

using namespace std;

//Khai bao lop doi tuong ngan xep luu tru phan tan co phan tu la ky ty
class Stack
{
    private:
        struct node
        {
            char infor;
            node *link;
        } *T;

    public:
        Stack();
        ~Stack();
        void push(char x);
        char pop();
        bool isEmpty();
};

//===chuong trinh chinh===
int main()
{
    //Tao 1 doi tuong ngan xep
    Stack s;

    //Khai bao bien
    unsigned int n,thuong,du;

    cout<<"Nhập vào 1 số nguyên dương: ";
    cin>>n;

    //Chuyen sang so hex
    thuong = n;
    while(thuong)
    {
        du = thuong%16;
        thuong /= 16;

        //Chuyen so du thanh chu so hex roi day vao ngan xep
        if(du<10) s.push(du+48);
        else s.push(du+55);
    }

    //Dua ra ket qua
    cout<<"Số hex của "<<n<<" là: ";
    while(!s.isEmpty()) cout<<s.pop();

    cout<<endl;
    return 0;
}
//===dinh nghia ham===
Stack::Stack():T(NULL)
{

}

Stack::~Stack()
{
    while(T)
    {
        node *P=T;
        T = T->link;
        delete P;
    }
}

void Stack::push(char x)
{
    //1.Tao nut nho moi chua x
    node *N = new node;
    N->infor = x;
    N->link = NULL;

    //2.Noi nut moi vao tren nut T
    N->link = T;

    //3.Cho T tro sang nut moi
    T = N;
}

char Stack::pop()
{
    //1.Kiem tra ngan xep rong
    if(T==NULL)
    {
        cout<<"Ngan xep da rong";
        return 1;
    }

    //2.Gui lai nut dinh
    char tg = T->infor;
    node *P = T;

    //3.Cho T tro xuong nut ben duoi
    T = T->link;

    //4.Huy nut dinh va tra ve phan tu dinh da loai bo
    delete P;
    return tg;
}

bool Stack::isEmpty()
{
    return T==NULL;
}
